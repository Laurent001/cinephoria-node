# Cinephoria Backend

Backend Node.js/Express de Cinephoria, codé en TypeScript avec support ESM (`import/export`).

---
## Installation


git clone https://github.com/ton-user/cinephoria-node.git
cd cinephoria-node
npm install

Script | Description
npm run dev | Démarre le serveur en mode développement avec nodemon
npm run start | Démarre avec tsx en local (optionnel)
npm run build | Compile TypeScript vers JavaScript dans dist/
npm run start:prod | Lance le serveur compilé (dist/src/server.js)
npm run setup | Exécute un script d'initialisation (db/setup.ts)
npm test | Lance les tests avec jest

Environnements

.env gère les variables d'environnement

NODE_ENV conditionne les comportements :
    production : redirige les images vers Cloudinary
    development : sert les images depuis public/images/


Structure

cinephoria-node/
├── src/
│   ├── app.ts          ← Configuration Express
│   ├── server.ts       ← Entrée principale
│   └── api/routes/     ← Routes Express
├── db/                 ← Scripts base de données
├── public/             ← Dossier public (ex: images)
├── dist/               ← Code compilé (généré)
├── .env                ← Variables d'env locales
├── package.json
├── tsconfig.json
└── README.md

TypeScript + ESM
    "type": "module" dans package.json
    Import avec .js obligatoire dans tous les fichiers .ts
    
    Exemple :
    // correct
    import app from './app.js';
    ​// incorrect en ESM
    import app from './app';

Build Notes
  Le code TypeScript est compilé dans dist/

